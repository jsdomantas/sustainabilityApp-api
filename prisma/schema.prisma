generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int             @id @default(autoincrement())
  email          String          @unique
  firebaseUserId String          @unique
  DeviceToken    DeviceToken[]
  role           String          @default("basic")
  BusinessOwner  BusinessOwner[]
  Customer       Customer[]
}

model BusinessOwner {
  id              Int          @id @default(autoincrement())
  userId          Int
  user            User         @relation(fields: [userId], references: [id])
  Offer           Offer[]
  title           String
  usualPickupTime String
  latitude        Float
  longitude       Float
  products        Ingredient[]
}

model Customer {
  id         Int          @id @default(autoincrement())
  userId     Int
  user       User         @relation(fields: [userId], references: [id])
  Offer      Offer[]
  PantryItem PantryItem[]
}

model Ingredient {
  id              Int              @id @default(autoincrement())
  title           String           @unique
  foodCollections FoodCollection[]
  businessOwners  BusinessOwner[]
}

model FoodCollection {
  id                Int          @id @default(autoincrement())
  title             String
  description       String
  latitude          Float
  longitude         Float
  isActive          Boolean      @default(false)
  neededIngredients Ingredient[]
}

model Offer {
  id              Int           @id @default(autoincrement())
  title           String
  description     String
  latitude        Float
  longitude       Float
  status          String        @default("posted")
  businessOwnerId Int
  businessOwner   BusinessOwner @relation(fields: [businessOwnerId], references: [id])
  Customer        Customer?     @relation(fields: [customerId], references: [id])
  customerId      Int?
}

model PantryItem {
  id             Int      @id @default(autoincrement())
  title          String
  description    String
  expirationDate DateTime
  photoUrl       String
  isExpired      Boolean
  customerId     Int
  customer       Customer @relation(fields: [customerId], references: [id])
  ingredientId   Int
}

model DeviceToken {
  id         Int    @id @default(autoincrement())
  token      String @unique
  user       User   @relation(fields: [userAuthId], references: [firebaseUserId])
  userAuthId String
}
